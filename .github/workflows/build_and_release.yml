name: Flutter Build and Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # Use a specific Flutter version, e.g., '3.19.x'

      - name: Install Dependencies
        run: flutter pub get

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Get current version and increment build number
        id: get_version
        run: |
          CURRENT_VERSION=$(yq '.version' pubspec.yaml)
          VERSION_NAME=$(echo $CURRENT_VERSION | cut -d'+' -f1)
          BUILD_NUMBER=$(echo $CURRENT_VERSION | cut -s -d'+' -f2)
          
          if [ -z "$BUILD_NUMBER" ]; then
            BUILD_NUMBER=0
          fi
          
          NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
          NEW_FULL_VERSION="${VERSION_NAME}+${NEW_BUILD_NUMBER}"
          
          echo "Current Version: $CURRENT_VERSION"
          echo "New Full Version: $NEW_FULL_VERSION"
          
          yq -i '.version = "'"${NEW_FULL_VERSION}"'"' pubspec.yaml
          
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_OUTPUT
          echo "NEW_BUILD_NUMBER=${NEW_BUILD_NUMBER}" >> $GITHUB_OUTPUT
          echo "NEW_FULL_VERSION=${NEW_FULL_VERSION}" >> $GITHUB_OUTPUT

      - name: Commit and Push new version
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add pubspec.yaml
          git commit -m "Increment build number to ${{ steps.get_version.outputs.NEW_FULL_VERSION }}"
          git push

      - name: Build Android (APK)
        run: flutter build apk --release --build-name=${{ steps.get_version.outputs.VERSION_NAME }} --build-number=${{ steps.get_version.outputs.NEW_BUILD_NUMBER }}

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Build Web
        run: flutter build web --release --build-name=${{ steps.get_version.outputs.VERSION_NAME }} --build-number=${{ steps.get_version.outputs.NEW_BUILD_NUMBER }}

      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.NEW_FULL_VERSION }}-alpha
          name: Release v${{ steps.get_version.outputs.NEW_FULL_VERSION }} (Alpha)
          body: |
            Automated alpha release for version ${{ steps.get_version.outputs.NEW_FULL_VERSION }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
